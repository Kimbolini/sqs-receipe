@page "/"

@using frontend.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@using Newtonsoft.Json.Linq
@using frontend.Services;
@inject NavigationManager _nav
@inject MealProviderService MealProvider;

<PageTitle>Home</PageTitle>

<h1>Recipes!</h1>

<p>Welcome to your meal database. </p>

<form>
    <p>
        Search for meals: <input type="text" @bind-value="@searchTextBoxContent" placeholder="Search for receipts"/>
        <button type="submit" @onclick="@SearchMealsAPI">Search</button>
    </p>
</form>



    <div class="d-flex" id="meal-preview-wrap-container">
        @foreach (var item in meals)
        {
            <MealPreviewCardComp Id=@item.idMeal
                         Title=@item.strMeal
                         Category=@item.strCategory
                         Area=@item.strArea
                         ImageUrl=@item.strMealThumb
                        OnSelected="HandleItemSelected"
                        Selected=@item.Selected>
                <Hashtags>
                    @if (item.strTags != "")
                    {
                        <div class="alert alert-primary">
                            @item.strTags
                        </div>
                    }
                </Hashtags>
            </MealPreviewCardComp>
        }
    </div>




@code {

    private IEnumerable<Meal> meals = Array.Empty<Meal>();
    private bool getMealsError;
    private bool responseIsEmpty;
    private bool shouldRender;
    private string? searchTextBoxContent;

    protected override bool ShouldRender() => shouldRender;

    /*
    protected override async Task OnInitializedAsync()
    {
    }*/


    protected override async Task OnInitializedAsync()
    {
        meals = await MealProvider.GetMeals(searchTextBoxContent);
        shouldRender = true;
    }

    private void SearchMealsAPI()
    {
        meals = MealProvider.GetMeals(searchTextBoxContent).Result;

        if(meals.Count() == 0)
        {
            responseIsEmpty = true;
        }
        shouldRender = true;
        StateHasChanged();
    }

    void HandleItemSelected(string selectedMealId)
    {
        foreach (var item in meals) item.Selected = false;

        meals.First(f => f.idMeal == selectedMealId).Selected = true;
        _nav.NavigateTo($"/{selectedMealId}");

    }
}

