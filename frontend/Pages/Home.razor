@page "/"

@using System.Collections.ObjectModel;
@using frontend.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@using Newtonsoft.Json.Linq
@using frontend.Services;
@using frontend.Services.DTO;
@inject NavigationManager _nav
@inject MealProviderService MealProvider;

<PageTitle>Home</PageTitle>

<h1>Recipes!</h1>

<p>Welcome to your meal database. </p>

<span>
    <label>Search for receipts:</label>
    <input type="text" @bind-value="@searchTextBoxContent" />
    <input type="button" value="Search" @onclick="@SearchMealsAPI" />
</span>

<span>
    <label>Inspire me!</label>
    <input type="button" value="Random" @onclick="@SearchMealsAPIWithEmpty" />
</span>

<MealPreviewListComp Meals="@meals"></MealPreviewListComp>

@if(responseIsEmpty)
{
    <p>Sorry, we couldn't find anything.</p>
}

@code {
    private bool responseIsEmpty;
    private string? searchTextBoxContent;
    private ObservableCollection<Meal>? meals_old;
    private ObservableCollection<MealDto>? meals;

    private void SearchMealsAPI()
    {
        var tmp = MealProvider.GetMealsFromAPI(searchTextBoxContent).Result;
        if(tmp != null)
        {
            meals = new ObservableCollection<MealDto>(tmp);
            responseIsEmpty = false;
        } else
        {
            meals = new ObservableCollection<MealDto>();
            responseIsEmpty = true;
        }
    }

    private void SearchMealsAPIWithEmpty()
    {
        searchTextBoxContent = "";
        var tmp = MealProvider.GetMealsFromAPI("").Result;
        meals = new ObservableCollection<MealDto>(tmp);
        responseIsEmpty = false;
    }
}

